//directions
  directionsService = new google.maps.DirectionsService();
  directionsRenderer = new google.maps.DirectionsRenderer();

  //directionsRenderer.setPanel(document.getElementById("sidebar"));

  const control = document.getElementById('floating-panel');

  map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);

  // const getRoute = document.getElementById("get_route");
  // getRoute.addListener("click", () => {
  //   console.log("get route");
  //   calculateAndDisplayRoute(directionsService, directionsRenderer);
  // });
  // const onChangeHandler = function () {
  //   calculateAndDisplayRoute(directionsService, directionsRenderer);
  // };

  // document
  //   .getElementById("origin-input")
  //   .addEventListener("place_changed", onChangeHandler);
  // document
  //   .getElementById("destination-input")
  //   .addEventListener("place_changed", onChangeHandler);
}

const findLastStep = (halfWay, dir) => {
  let total = 0;
  let newSteps = [];
  for (let i = 0; i < dir.length; i++) {
    let step = dir[i];
    newSteps.push(step);
    total += step.distance.value;
    if (total > halfWay) {
      // console.log(i);
      // console.log(newSteps);
      return newSteps;
    }
  }
};

const getRoute = document.getElementById('get_route');
getRoute.addEventListener('click', () => {
  console.log('get route');
  calculateAndDisplayRoute(directionsService, directionsRenderer);
});

function calculateAndDisplayRoute(directionsService, directionsRenderer) {
  directionsService
    .route({
      origin: {
        query: origin.name,
      },
      destination: {
        query: dest.name,
        // query: "Amarillo",
      },
      travelMode: google.maps.TravelMode.WALKING,
    })
    .then((response) => {
      console.log('response', response);
      const steps = response.routes[0].legs[0].steps;
      const distance = response.routes[0].legs[0].distance.value;
      const half = distance / 2;
      let newSteps = findLastStep(half, steps);
      // console.log(distance, half);
      // console.log(steps);
      console.log(newSteps);

      response.routes[0].legs[0].steps = newSteps;
      //console.log(destination);
      last = newSteps[newSteps.length - 1];
      console.log('last', last);
      console.log('last lat', last.start_location.lat());
      console.log('last lat', last.start_location.lng());
      lastLat = last.start_location.lat();
      lastLng = last.start_location.lng();
      window.localStorage.setItem('lastLat', JSON.stringify(lastLat));
      window.localStorage.setItem('lastLng', JSON.stringify(lastLng));
      new google.maps.Marker({
        position: last.end_location,
        map: map,
      });
      directionsRenderer.setMap(map);
      directionsRenderer.setDirections(response);
    })
    .catch((e) => window.alert('Directions request failed due to ' + status));
  //second setting of directions
  // directionsService
  //   .route({
  //     origin: {
  //       query: origin.name,
  //     },
  //     destination: {
  //       // query: new destination,
  //       query: "Central Park",
  //     },
  //     travelMode: google.maps.TravelMode.WALKING,
  //   })
  //   .then((response) => {
  //     console.log("second response", response);
  //     directionsRenderer.setMap(map);
  //     directionsRenderer.setDirections(response);
  //   })
  //   .catch((e) => window.alert("Directions request failed due to " + status));
}

const findBtn = document.querySelector('#find_places');

findBtn.addEventListener('click', () => {
  console.log('findBtn');
  findPlaces(lastLat, lastLng);
});

const findPlaces = async (lat, lng) => {
  const placesDiv = document.querySelector('#places');
  while (placesDiv.firstChild) {
    placesDiv.removeChild(placesDiv.firstChild);
  }
  try {
    await axios
      .get(
        `https://protected-brook-77403.herokuapp.com/https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${lat}%2C${lng}&radius=500&type=restaurant&key=AIzaSyD-WH-LKszQqhEgiEEcjqdc2v3OBmcPBd0`
      )
      .then((response) => {
        console.log(response.data);
        const places = response.data.results;
        service = new google.maps.places.PlacesService(map);
        places.forEach((place) => {
          const request = {
            placeId: place.place_id,
            fields: ['url', 'website'],
          };
          service.getDetails(request, callback);
          function callback(_place, status) {
            if (status == google.maps.places.PlacesServiceStatus.OK) {
              console.log('web', _place);
              info = document.createElement('div');
              info.innerHTML = place.name;
              info.innerHTML += `<a href="${_place.url}" target="_blank">Listing</a>`;
              info.innerHTML += `<a href="${_place.website}" target="_blank">Website</a>`;
              // info.innerHTML += `<button onClick=takeMe(${place.name})>Take Me There</button>`;
              placesDiv.appendChild(info);
              // takeMe = (place) => {
              //   console.log(`take me to ${place}`);
              // };
            }
          }
        });
      });
  } catch (err) {
    console.log(err);
  }
};